name: Deploy to Staging

on:
  push:
    branches:
      - master

jobs:
  deploy:
    # Do not deploy in the main repository, only in user projects
    if: github.repository_owner != 'fastapi'
    runs-on:
      - self-hosted
      - staging

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create .env file
        run: |
          cat > .env << EOF
          ENVIRONMENT=staging
          DOMAIN=${{ secrets.DOMAIN_STAGING }}
          PROJECT_NAME=${{ secrets.PROJECT_NAME }}
          FRONTEND_HOST=${{ secrets.FRONTEND_HOST }}
          STACK_NAME=${{ secrets.STACK_NAME_STAGING }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          FIRST_SUPERUSER=${{ secrets.FIRST_SUPERUSER }}
          FIRST_SUPERUSER_PASSWORD=${{ secrets.FIRST_SUPERUSER_PASSWORD }}
          SMTP_HOST=${{ secrets.SMTP_HOST }}
          SMTP_USER=${{ secrets.SMTP_USER }}
          SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
          EMAILS_FROM_EMAIL=${{ secrets.EMAILS_FROM_EMAIL }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          POSTGRES_SERVER=${{ secrets.POSTGRES_SERVER }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          BACKEND_CORS_ORIGINS=${{ secrets.BACKEND_CORS_ORIGINS }}
          DOCKER_IMAGE_BACKEND=backend
          DOCKER_IMAGE_FRONTEND=frontend
          EOF

      - name: Deploy
        run: |
          docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} down
          docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} build
          docker compose -f docker-compose.yml --project-name ${{ secrets.STACK_NAME_STAGING }} up -d